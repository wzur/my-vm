- name: Configure server
  hosts: all
  gather_facts: no
  become: True
  vars:
    defaultsystemtarget: 'graphical.target'

  tasks:
    - name: Encrypt the default password
      set_fact:
        password: "{{ lookup('pipe', 'echo $USER | mkpasswd --method=SHA-512 --stdin') }}"
    - name: Create normal user
      user: name={{ lookup('env', 'USER') }} password={{ password }} groups=adm,sudo shell=/bin/bash
    - name: Deploy additional SSH key(s) to the management account
      authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        manage_dir: yes
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Make sure the system is up to date
      environment:
        DEBIAN_FRONTEND: noninteractive
      apt: upgrade=yes update_cache=yes

    - name: Install additional packages
      environment:
        DEBIAN_FRONTEND: noninteractive
      apt: name={{ item }} state=present
      with_items:
        - bash-completion
        - screen
        - mc
        - awscli
        - imagemagick

    - name: Install Ubuntu Desktop
      environment:
        DEBIAN_FRONTEND: noninteractive
      apt: name="{{ item }}" state=present
      with_items:
        - 'ubuntu-desktop'
        - 'unity-tweak-tool'
        - 'vim-gnome'

    - name: Install additional packages for graphical environment
      environment:
        DEBIAN_FRONTEND: noninteractive
      apt: name={{ item }} state=present
      with_items:
        - evolution
        - evolution-ews
        - evolution-rss
        - firefox
        - git-cola

    - name: Set default run level to graphical
      shell: |
        if [ "x{{ defaultsystemtarget }}" != "x`systemctl get-default`" ]
        then
           systemctl set-default {{ defaultsystemtarget }}
        else
           echo {{ defaultsystemtarget }} already set >&2
        fi
      register: defaultrunlevel
      changed_when: >
        "defaultrunlevel.rc == 0" and ("already set" not in defaultrunlevel.stderr)

    - name: Activate graphical run level
      shell: |
        if [ "xactive" != "x`systemctl is-active {{ defaultsystemtarget }}`" ]
        then
           systemctl isolate {{ defaultsystemtarget }}
        else
           echo {{ defaultsystemtarget }} already active >&2
        fi
      register: changerunlevel
      changed_when: >
        "changerunlevel.rc == 0" and ("already active" not in changerunlevel.stderr)

    - name: Schedule a reboot (if needed)
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      args:
        removes: /var/run/reboot-required
      async: 1
      poll: 0
      ignore_errors: true
      register: reboot

    - name: Waiting for the machine to come back after reboot
      become: false
      local_action: wait_for host={{ inventory_hostname }} port=22 delay=30 timeout=320 state=started
      when: reboot.changed

    - name: Configure VirtualBox additions for graphical environment
      shell: >
        test -f /var/lib/VBoxGuestAdditions/config &&
        . /var/lib/VBoxGuestAdditions/config &&
        "${INSTALL_DIR}/init/vboxadd-x11" setup
      args:
        creates: /etc/X11/Xsession.d/98vboxadd-xclient # a random pick of files created by this command

# vim: ts=4:tw=4:et:si
